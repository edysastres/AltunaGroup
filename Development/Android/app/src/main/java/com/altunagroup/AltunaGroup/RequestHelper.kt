package com.altunagroup.AltunaGroup

import android.app.Activity
import android.content.Context
import android.content.Intent
import android.se.omapi.Session
import android.support.v4.content.ContextCompat.startActivity
import android.support.v7.widget.LinearLayoutManager
import android.support.v7.widget.RecyclerView
import android.util.Log
import android.view.View
import android.widget.ListView
import android.widget.ProgressBar
import android.widget.Toast
import com.android.volley.Request
import com.android.volley.Response
import com.android.volley.toolbox.StringRequest
import com.android.volley.toolbox.Volley
import com.google.gson.Gson
import com.google.gson.GsonBuilder
import com.google.gson.JsonArray
import com.google.gson.JsonObject
import org.json.JSONArray
import org.json.JSONObject
import java.io.UnsupportedEncodingException
import java.text.SimpleDateFormat
import java.util.*

class RequestHelper(ctx: Context) {

    var ctx: Context = ctx
    val AUTH_URL: String = "http://201.144.29.90/altuna/api/login/authenticate"
    val EVENTS_BASE_URL: String = "http://201.144.29.90/altuna/api/customers/uID/events"
    val EVENT_LOCKSMITHS_URL: String = "http://201.144.29.90/altuna/api/customers/uID/events/eID/locksmiths"
    val CUSTOMER_LOCKSMITHS: String = "http://201.144.29.90/altuna/api/customers/uID/locksmiths/"

    fun makeRequest(url: String, params: HashMap<String, String>): Boolean{

        try {

            return true
        } catch(ex: Exception){
            Toast.makeText(ctx, "Ocurrió un error al procesar la solicitud, intente de nuevo", Toast.LENGTH_SHORT).show()
            return false
        }
    }

    fun makeRequest(locksmith: LocksmithModel): Boolean{
        try {
            val gson = GsonBuilder().setPrettyPrinting().create()
            val jsonPerson: String = gson.toJson(locksmith)
            Log.i("JSON data", jsonPerson)
            return true
        } catch(ex: Exception){
            Toast.makeText(ctx, "Ocurrió un error al registrar el cerrajero" + locksmith.locksmithDesc + " intente de nuevo", Toast.LENGTH_SHORT).show()
            return false
        }
    }

    fun getEvents(view: View, act: Activity, progress: ProgressBar, listProgress: ProgressBar) : ArrayList<Event> {
        progress.visibility = View.VISIBLE
        val uID: String = PreferencesHelper(ctx).userID.toUpperCase() //Obtiene el ID de usuario que inició sesión
        var url: String = EVENTS_BASE_URL.replace("uID", uID) //URL a la que se lanzará la solicitud <--------------------------------------------------
        var events: ArrayList<Event> = ArrayList<Event>() //ArrayList que almacenará los eventos                                                                |
        try {//                                                                                                                                                 |
            val gson = GsonBuilder().setPrettyPrinting().create() //Construye el objeto gson para traducir los objetos a JSON strings                           |
            Log.i("Starting events request", "User ID: " + uID) //Informa el ID de usuario que se loggeó para informar los eventos que obtendra        |
            val queue = Volley.newRequestQueue(ctx) //Crea la cola de solicitudes                                                                               |
            val stringRequestHelper = object : StringRequest( //Comienza a crear la solicitud                                                                   |
                Request.Method.GET, //Solicitud GET                                                                                                             |
                url, //URL generada aquí-------------------------------------------------------------------------------------------------------------------------
                Response.Listener<String> {response ->
                    var jsonResult: JSONArray = JSONArray(response.toString()) //Obtiene la respuesta de la solicitud y crea un JSONArray para almacenar todos los eventos asociados al usuario
                    Log.d("Events obtained: ", response.toString()) //Informa de los eventos obtenidos en la respuesta
                    for(i in 0 .. (jsonResult.length() - 1)){ //Itera entra cada uno de los eventos obtenidos
                        //Por cada evento encontrado
                        val eventData = jsonResult.getJSONObject(i) //Obtiene el JSONObject del evento, para acceder a cada una de sus propiedades
                        events.add(Event( //Genera el objeto del evento y lo agrega al ArrayList
                            eventData.getInt("IDEvent"), //ID del evento
                            eventData.getString("EventName"), //Nombre del evento
                            eventData.getString("Place"), //Lugar del evento
                            eventData.getString("City"), //Ciudad del evento
                            eventData.getString("State"), //Estado del evento
                            eventData.getString("IDCountry"), //País del evento
                            //SimpleDateFormat("dd/MM/yyyy HH:mm:ss a").parse(eventData.getString("BeginDate")), //Fecha de inicio
                            //SimpleDateFormat("dd/MM/yyyy HH:mm:ss a").parse(eventData.getString("EndDate")), //Fecha de fin
                            eventData.getString("BeginDate"), //Fecha de inicio
                            eventData.getString("EndDate"), //Fecha de fin
                            eventData.getString("image"))) //Imagen del evento
                    }

                    var layoutMgr : LinearLayoutManager = LinearLayoutManager(ctx, LinearLayoutManager.HORIZONTAL, false)
                    var recyclerView : RecyclerView = view.findViewById(R.id.eventContainer)
                    recyclerView.layoutManager = layoutMgr
                    var adapter : EventRecyclerAdapter = EventRecyclerAdapter(events,
                        ctx,
                        view.findViewById(R.id.lvCerrajerosInvitados),
                        act,
                        listProgress)
                    recyclerView.adapter = adapter

                }, Response.ErrorListener {
                    //Métodos de notificación de errores
                    PreferencesHelper(ctx).loggedIn = false
                    if (it.networkResponse.statusCode == 401) { //Unauthorized
                        Toast.makeText(ctx, "El servidor rechazó la solicitud, probablemente no tenga permisos para procesar la solicitud. Intente nuevamente.", Toast.LENGTH_LONG).show()
                    } else if(it.networkResponse.statusCode == 500){
                        Toast.makeText(ctx, "El servidor no se encuentra disponible o no está recibiendo solicitudes actualmente. Intente nuevamente.", Toast.LENGTH_LONG).show()
                    } else {
                        var json = String(it.networkResponse.data)
                        if (json.isNotEmpty()) {
                            val oError = JSONObject(json)
                            if (oError.has("ExceptionMessage")) {
                                Toast.makeText(ctx, oError.getString("ExceptionMessage"), Toast.LENGTH_LONG).show()
                            } else {
                                Toast.makeText(
                                    ctx,
                                    "Ocurrió un problema al tratar de iniciar sesión, intente de nuevo. (Error " + it.networkResponse.statusCode + ")",
                                    Toast.LENGTH_LONG
                                ).show()
                            }
                        } else {
                            Toast.makeText(
                                ctx,
                                "Ocurrió un problema al tratar de iniciar sesión, intente de nuevo. (Error " + it.networkResponse.statusCode + ")",
                                Toast.LENGTH_LONG
                            ).show()
                        }
                    }
                }) {
                //Implementar métodos del request
                override fun getBodyContentType(): String {
                    return "application/json"
                }

                override fun getHeaders(): MutableMap<String, String> {
                    var preferencesHelper = PreferencesHelper(ctx)
                    val headers = HashMap<String, String>()
                    headers.put("Authorization", "Altuna " + preferencesHelper.token)
                    headers.put("User", preferencesHelper.userName)
                    headers.put("Password", preferencesHelper.pass)
                    headers.put("DataBaseID", preferencesHelper.dbId)
                    return headers
                }
            }
            queue.add(stringRequestHelper)
            progress.visibility = View.GONE
            return events
        } catch(ex: Exception){
            Toast.makeText(ctx, "Ocurrió un error inesperado: " + ex.message, Toast.LENGTH_SHORT).show()
            return events
        }
    }

    fun getLocksmithsFromEvent(eventID: Int, lvCerrajeros: ListView, act: Activity, progress: ProgressBar) : ArrayList<LocksmithModel> {
        progress.visibility = View.VISIBLE
        val uID: String = PreferencesHelper(ctx).userID.toUpperCase() //Obtiene el ID de usuario que inició sesión
            var url: String = EVENT_LOCKSMITHS_URL.replace("uID", uID).replace("eID", eventID.toString())
            var locksmiths: ArrayList<LocksmithModel> = ArrayList<LocksmithModel>() //ArrayList que almacenará los eventos
            try {
                val gson = GsonBuilder().setPrettyPrinting().create() //Construye el objeto gson para traducir los objetos a JSON strings
                Log.i("====Solicitud invitados", "Evento: " + eventID) //Informa el ID de usuario que se loggeó para informar los eventos que obtendra
                val queue = Volley.newRequestQueue(ctx) //Crea la cola de solicitudes
                val stringRequestHelper = object : StringRequest( //Comienza a crear la solicitud
                    Request.Method.GET, //Solicitud GET
                    url, //URL generada
                    Response.Listener<String> {response -> //Manejo de datos con la respuesta obtenida
                        var jsonResult: JSONArray = JSONArray(response.toString()) //Obtiene la respuesta de la solicitud y crea un JSONArray para almacenar todos los invitados asociados a un evento
                        Log.i("Invitados obtained: ", response.toString()) //Informa de los invitados obtenidos en la respuesta
                        for(i in 0 .. (jsonResult.length() - 1)){ //Itera entra cada uno de los invitados obtenidos
                            //Por cada invitado encontrado
                            val data = jsonResult.getJSONObject(i) //Obtiene el JSONObject del invitado, para acceder a cada una de sus propiedades
                            locksmiths.add(LocksmithModel(
                                data.getInt("IDLocksmith"),
                                data.getString("LocksmithDesc"),
                                "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",
                                AddressModel("Default", data.getString("Street"), data.getString("ExtNumber"), data.getString("IntNumber"), data.getString("Neighborhood"), data.getString("ZipCode"), data.getString("City"), data.getString("State"), data.getString("Phone"),data.getString("Email")),
                                data.getString("TradeName"),
                                data.getString("IDGestionCenter")))
                        }

                        lvCerrajeros.adapter = InvitedLocksmithsAdapter(locksmiths, act)

                    }, Response.ErrorListener {
                        //Métodos de notificación de errores
                        PreferencesHelper(ctx).loggedIn = false
                        if (it.networkResponse.statusCode == 401) { //Unauthorized
                            Toast.makeText(ctx, "El servidor rechazó la solicitud, probablemente no tenga permisos para procesar la solicitud. Intente nuevamente.", Toast.LENGTH_LONG).show()
                        } else if(it.networkResponse.statusCode == 500){
                            Toast.makeText(ctx, "El servidor no se encuentra disponible o no está recibiendo solicitudes actualmente. Intente nuevamente.", Toast.LENGTH_LONG).show()
                        } else {
                            var json = String(it.networkResponse.data)
                            if (json.isNotEmpty()) {
                                val oError = JSONObject(json)
                                if (oError.has("ExceptionMessage")) {
                                    Toast.makeText(ctx, oError.getString("ExceptionMessage"), Toast.LENGTH_LONG).show()
                                } else {
                                    Toast.makeText(
                                        ctx,
                                        "Ocurrió un problema al tratar de iniciar sesión, intente de nuevo. (Error " + it.networkResponse.statusCode + ")",
                                        Toast.LENGTH_LONG
                                    ).show()
                                }
                            } else {
                                Toast.makeText(
                                    ctx,
                                    "Ocurrió un problema al tratar de iniciar sesión, intente de nuevo. (Error " + it.networkResponse.statusCode + ")",
                                    Toast.LENGTH_LONG
                                ).show()
                            }
                        }
                    }) {
                    //Implementar métodos del request
                    override fun getBodyContentType(): String {
                        return "application/json"
                    }

                    override fun getHeaders(): MutableMap<String, String> {
                        var preferencesHelper = PreferencesHelper(ctx)
                        val headers = HashMap<String, String>()
                        headers.put("Authorization", "Altuna " + preferencesHelper.token)
                        headers.put("User", preferencesHelper.userName)
                        headers.put("Password", preferencesHelper.pass)
                        headers.put("DataBaseID", preferencesHelper.dbId)
                        return headers
                    }

                }
                queue.add(stringRequestHelper)
                progress.visibility = View.GONE
                return locksmiths
            } catch(ex: Exception){
                Toast.makeText(ctx, "Ocurrió un error inesperado: " + ex.message, Toast.LENGTH_SHORT).show()
                progress.visibility = View.GONE
                return locksmiths
            }
    }

    fun getLocksmithsFromCustomer(activity: Activity, lvCerrajeros: ListView) : ArrayList<LocksmithModel> {
        var url: String = CUSTOMER_LOCKSMITHS.replace("uID", PreferencesHelper(ctx).userID)
        var locksmiths: ArrayList<LocksmithModel> = ArrayList<LocksmithModel>()
        try {
            val gson = GsonBuilder().setPrettyPrinting().create()
            Log.i("Solicitud cerrajeros", "Path: " + url)
            val queue = Volley.newRequestQueue(ctx)
            val stringRequestHelper = object : StringRequest(
                Request.Method.GET,
                url,
                Response.Listener<String> {response ->
                    var jsonResult: JSONArray = JSONArray(response.toString())
                    Log.i("Invitados obtained: ", response.toString())
                    for(i in 0 .. (jsonResult.length() - 1)){
                        val data = jsonResult.getJSONObject(i)
                        locksmiths.add(LocksmithModel(
                            data.getInt("IDLocksmith"),
                            data.getString("LocksmithDesc"),
                            "",
                            AddressModel("Default", data.getString("Street"), data.getString("ExtNumber"), data.getString("IntNumber"), data.getString("Neighborhood"), data.getString("ZipCode"), data.getString("City"), data.getString("State"), data.getString("Phone"),data.getString("Email")),
                            data.getString("TradeName"),
                            data.getString("IDGestionCenter")))
                    }

                    lvCerrajeros.adapter = LocksmithAdapter(locksmiths, activity)

                }, Response.ErrorListener {
                    //Métodos de notificación de errores
                    PreferencesHelper(ctx).loggedIn = false
                    if (it.networkResponse.statusCode == 401) { //Unauthorized
                        Toast.makeText(ctx, "El servidor rechazó la solicitud, probablemente no tenga permisos para procesar la solicitud. Intente nuevamente.", Toast.LENGTH_LONG).show()
                    } else if(it.networkResponse.statusCode == 500){
                        Toast.makeText(ctx, "El servidor no se encuentra disponible o no está recibiendo solicitudes actualmente. Intente nuevamente.", Toast.LENGTH_LONG).show()
                    } else {
                        var json = String(it.networkResponse.data)
                        if (json.isNotEmpty()) {
                            val oError = JSONObject(json)
                            if (oError.has("ExceptionMessage")) {
                                Toast.makeText(ctx, oError.getString("ExceptionMessage"), Toast.LENGTH_LONG).show()
                            } else {
                                Toast.makeText(
                                    ctx,
                                    "Ocurrió un problema al tratar de iniciar sesión, intente de nuevo. (Error " + it.networkResponse.statusCode + ")",
                                    Toast.LENGTH_LONG
                                ).show()
                            }
                        } else {
                            Toast.makeText(
                                ctx,
                                "Ocurrió un problema al tratar de iniciar sesión, intente de nuevo. (Error " + it.networkResponse.statusCode + ")",
                                Toast.LENGTH_LONG
                            ).show()
                        }
                    }
                }) {
                //Implementar métodos del request
                override fun getBodyContentType(): String {
                    return "application/json"
                }

                override fun getHeaders(): MutableMap<String, String> {
                    var preferencesHelper = PreferencesHelper(ctx)
                    val headers = HashMap<String, String>()
                    headers.put("Authorization", "Altuna " + preferencesHelper.token)
                    headers.put("User", preferencesHelper.userName)
                    headers.put("Password", preferencesHelper.pass)
                    headers.put("DataBaseID", preferencesHelper.dbId)
                    return headers
                }

            }
            queue.add(stringRequestHelper)
            return locksmiths
        } catch(ex: Exception){
            Toast.makeText(ctx, "Ocurrió un error inesperado: " + ex.message, Toast.LENGTH_SHORT).show()
            return locksmiths
        }
    }

    fun tryLogin(loginData: LoginData) : SessionInfo {
        var sessionResult: SessionInfo = SessionInfo(loginData.user, loginData.password)
        try {
            val gson = GsonBuilder().setPrettyPrinting().create()
            val jsonData: String = gson.toJson(loginData)
            Log.i("JSON Session data", jsonData)
            val queue = Volley.newRequestQueue(ctx)
            val stringRequestHelper = object : StringRequest(
                Request.Method.POST, AUTH_URL,
                Response.Listener<String> { response ->
                    var responseString = response.toString()
                    //val sessionArray = JSONObject(responseString)
                    val sessionData = JSONObject(responseString)//sessionArray.getJSONObject(0)
                    Log.i("Auth-Response", sessionData.toString())
                    PreferencesHelper(ctx).token = sessionData.getString("authorization")
                    sessionResult = SessionInfo(sessionData.getString("user"),
                        sessionData.getString("password"),
                        sessionData.getString("userID"),
                        DatabaseInfo(sessionData.getString("databaseId"), sessionData.getString("databaseName"), sessionData.getString("databaseDescription")),
                        sessionData.getString("databaseName"),
                        sessionData.getString("databaseDescription"),
                        ArrayList<DatabaseInfo>(),//.add(DatabaseInfo(sessionData.getString("databaseId"), sessionData.getString("databaseName"), sessionData.getString("databaseDescription")))
                        Date(),
                        sessionData.getString("languageId"),
                        sessionData.getString("authorization"),
                        sessionData.getString("groupname"))
                    if(sessionResult.authorizationToken.length > 0){
                        PreferencesHelper(ctx).loggedIn = true
                        PreferencesHelper(ctx).userID = sessionResult.userId
                        PreferencesHelper(ctx).userName = sessionResult.user
                        PreferencesHelper(ctx).pass = sessionResult.pass
                        PreferencesHelper(ctx).token = sessionResult.authorizationToken
                        PreferencesHelper(ctx).dbId = sessionResult.dbInfo.databaseId
                        var intent = Intent(ctx, EventsActivity::class.java)
                        startActivity(ctx, intent, null)
                    } else {
                        PreferencesHelper(ctx).loggedIn = false
                        Toast.makeText(ctx, "Ocurrió un error al iniciar sesión, comprueba tus credenciales e intenta de nuevo (Token: " + sessionResult.authorizationToken.length + ")", Toast.LENGTH_LONG).show()
                    }
                }, Response.ErrorListener {
                    if (it.networkResponse.statusCode == 401) { //Unauthorized
                        PreferencesHelper(ctx).loggedIn = false
                        //var intent = Intent(ctx, LoginActivity::class.java)
                        //startActivity(intent)
                        //activity!!.finish()
                    } else {
                        var json = String(it.networkResponse.data)
                        if (json.isNotEmpty()) {
                            val oError = JSONObject(json)
                            if (oError.has("ExceptionMessage")) {
                                Toast.makeText(ctx, oError.getString("ExceptionMessage"), Toast.LENGTH_LONG).show()
                            } else {
                                Toast.makeText(
                                    ctx,
                                    "Ocurrió un problema al tratar de iniciar sesión, intente de nuevo. (Error " + it.networkResponse.statusCode + ")",
                                    Toast.LENGTH_LONG
                                ).show()
                            }
                        } else {
                            Toast.makeText(
                                ctx,
                                "Ocurrió un problema al tratar de iniciar sesión, intente de nuevo. (Error " + it.networkResponse.statusCode + ")",
                                Toast.LENGTH_LONG
                            ).show()
                        }
                    }
                }){
                override fun getBodyContentType(): String {
                    return "application/json"
                }

                override fun getHeaders(): MutableMap<String, String> {
                    //PreferencesHelper(ctx) = PreferencesHelper(ctx!!)
                    val headers = HashMap<String, String>()
                    //headers.put("Authorization", "Altuna " + loginData.authorizationToken)
                    //headers.put("User", loginData.user)
                    //headers.put("Password", loginData.password)
                    //headers.put("DataBase", loginData.databaseName)
                    return headers
                }

                override fun getBody(): ByteArray {
                    try {
                        return if(jsonData == null) ByteArray(0) else jsonData.toByteArray(Charsets.UTF_8)
                    } catch(ex: UnsupportedEncodingException){
                        Log.e("Error on request body", ex.message)
                        return ByteArray(0)
                    }
                }
            }
            queue.add(stringRequestHelper)
            return sessionResult
        } catch(ex: Exception){
            Log.e("Login failed", ex.message)
            return SessionInfo(loginData.user, loginData.password)
        }
    }
}